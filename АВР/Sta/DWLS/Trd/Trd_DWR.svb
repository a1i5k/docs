'#Reference {C9E29022-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29010-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29020-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29005-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29006-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29008-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E2900F-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29012-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29015-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29016-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29021-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29018-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29019-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E2901A-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E2901B-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E2901C-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E2901D-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29014-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29013-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29011-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E2900D-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E2900C-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E2900A-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29009-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29004-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29007-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E2900E-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E2900B-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29001-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29003-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
'#Reference {C9E29002-3D45-11D4-9FF4-00C04FA0D540}#1.0#0#
Option Base 1
Option Explicit
'#Uses "*STB.SVX"
'#Uses "*GRAPHICS.SVX"
Sub Main
  Dim Itr,Imax,n As Integer
  Dim Vr2,Vr3,Vr4, _
      Vr5,Vr6    As  Integer
  Dim Nc   As Integer
  Dim NCas As Integer
  Dim Nri  As Integer
  Dim Tol,SRw, _
      Stp,Smax, _
      StD,StDe As Double
  Dim Stf As Double
  Dim Lbd As Double
'
  Dim X()   As Double
  Dim Y()   As Double
  Dim Ys()  As Double
  Dim Rw()  As Double
  Dim Res() As Double
  Dim Sg()  As Double
'
' Object Spreadsheet
  Dim TS   As Spreadsheet
  Set TS = ActiveSpreadsheet
'
  NCas = TS.NumberOfCases ' volume of sample
  ReDim X(NCas)   As Double
  ReDim Y(NCas)   As Double
  ReDim Ys(NCas)  As Double
  ReDim Rw(NCas)  As Double
  ReDim Res(NCas) As Double
  ReDim Sg(NCas)  As Double
'
' Initialization
  Itr = 1
  Vr2 = 2
  Vr3 = 3
  Vr4 = 4
  Vr5 = 32
  Vr6 = 33
  For n = 1 To NCas
    X(n) = n
    Y(n) = TS.Cells(n,1)
    Ys(n) = 0.0
    Rw(n) = 1.0
  Next n
'
' Smoothing parametr of
' Distance-Weighted Least Squares Fitting
  Stf  = 0.25 ' fraction of points 0.2 <= Stf <= 0.8
  Stp  = 0.05 ' stiffness step
  Smax = 0.65 ' stiffness maximum
  Nri  = 0    ' number of the robust iterations
  Lbd  = 0.0  ' exponential weighted parametr
'
' DWLS & EWR
  For n=1 To NCas
    Nc = n
    Call DWReg (Nc,NCas,Nri,Stf,Lbd,X,Y,Ys,Rw,Sg)
    Res(n) = Y(n)-Ys(n)
    TS.Cells(n,Vr6+3) = Sg(n) ' Std. Dev.
  Next n
'
' Output of current estimation
  SRw = 0.0
  StD = 0.0
  For n = 1 To NCas
    TS.Cells(n,Vr2) = Ys(n)
    TS.Cells(n,Vr3) = Rw(n)
    TS.Cells(n,Vr4) = Res(n)
    SRw   = SRw+Rw(n)
    StD   = StD+Rw(n)*Ys(n)*Ys(n)
    X(n)  = n
    Y(n)  = Res(n)
    Ys(n) = 0.0
    Rw(n) = 1.0
  Next n
  StD = Sqr(StD/SRw/NCas)
  TS.Cells(Itr,Vr5) = StD
'
' Estimation cicle
  Imax = 20 ' max number of iterations
  Tol  = 0.0001
L1: Itr = Itr+1
    If (Itr>Imax) Then GoTo L2
'
' DWLS & EWR
    Stf = Stf+Stp ' fraction of points 0.2<=Stf<=0.8
    If (Stf > Smax) Then Stf = Smax
    For n=1 To NCas
      Nc = n
      Call DWReg (Nc,NCas,Nri,Stf,Lbd,X,Y,Ys,Rw,Sg)
      Res(n) = Y(n)-Ys(n)
      TS.Cells(n,Vr6+3) = Sg(n) ' Std. Dev.
    Next n
    Vr2 = Vr2+3
    Vr3 = Vr3+3
    Vr4 = Vr4+3
    If (Vr4<Vr5) Then
      For n = 1 To NCas
        TS.Cells(n,Vr2) = Ys(n)
        TS.Cells(n,Vr3) = Rw(n)
        TS.Cells(n,Vr4) = Res(n)
      Next n
    End If
'
' Continue estimation rules
    SRw  = 0.0
    StDe = 0.0
    For n = 1 To NCas
      SRw  = SRw+Rw(n)
      StDe = StDe+Rw(n)*Ys(n)*Ys(n)
    Next n
    StDe = Sqr(StDe/SRw/NCas)
    TS.Cells(Itr,Vr5) = StDe
' Refresh Arrays
    If (Abs(StD-StDe)>Tol*StDe) Then
      For n = 1 To NCas
        X(n) = n
        Y(n) = Res(n)
        Ys(n) = 0.0
        Rw(n) = 1.0
      Next n
      StD = StDe
      GoTo L1
    End If
'
L2: StD = 0.0
  For n = 1 To NCas
    Ys(n) = TS.Cells(n,1)-Res(n)
    StD   = StD+Res(n)*Res(n)
    TS.Cells(n,Vr6)   = Ys(n)  ' trend
    TS.Cells(n,Vr6+1) = Res(n) ' seasonal
  Next n
  TS.Cells(1,Vr6+2) = Sqr(StD/NCas) ' std.dev of seasonal
  StD = 0.0
  For n = 3 To NCas
    Y(n) = Ys(n)-2.0*Ys(n-1)+Ys(n-2) ' linear prediction error
    StD  = StD+Y(n)*Y(n)
  Next n
  TS.Cells(2,Vr6+2) = Sqr(StD/(NCas-2)) ' std.dev of rofecast
'
End Sub
Sub DWReg (Mc As Integer, Nc As Integer, Nri As Integer, _
           Stf As Double, Lbd As Double, _
           ByRef X() As Double, ByRef Y() As Double, _
           ByRef Ys() As Double, ByRef Rw() As Double, _
           ByRef Sg() As Double)
'
  Dim Itr,k    As Integer
  Dim Dis,Eps,Vc, _
      S1,S2,Ws As Double
'
  Dim Ysmo As Double
  Dim Wd() As Double
  Dim We() As Double
  Dim Wp() As Double
  Dim W()  As Double
  Dim R2() As Double
'
  ReDim Wd(1 To Nc) As Double
  ReDim We(1 To Nc) As Double
  ReDim Wp(1 To Nc) As Double
  ReDim W (1 To Nc) As Double
  ReDim R2(1 To Nc) As Double
'
' Initialization
  Eps = 0.00001
  Ws  = 0.0
  For k = 1 To Nc
    Dis   = (X(k)-X(Mc))^2
    Wd(k) = Weight(Nc,Stf,Dis)
'    Wd(k) = 1.0 ' Exponential Weighted Regression
    W(k)  = Wd(k)
    Wp(k) = 1.0
    Ws    = Ws+Wp(k)*Wp(k)
  Next k
'
' Estimation cicle
  Itr = -1
L1: Itr = Itr+1
    Call Solver (Mc,Nc,W,X,Y,Ysmo,R2)
    S1 = 0.0
    For k = 1 To Nc
      If (Itr = 0) Then
        S1 = S1+R2(k)
      Else
        S1 = S1+W(k)*R2(k)
      End If
    Next k
'
    If (Itr = 0) Then
      Vc = 2.0*S1/Nc
    Else
      Vc = 2.0*(1.0+Lbd)*S1/S2
    End If
'
    Dis = 0.0
    S2  = 0.0
    If (Vc < 0.000000001) Then Vc = 0.000000001
    For k = 1 To Nc
      We(k) = Exp(-Lbd*R2(k)/Vc)
      If (We(k) < Eps) Then We(k) = Eps
      Dis   = Dis+(We(k)-Wp(k))^2
      W(k)  = Wd(k)*We(k)
      S2    = S2+W(k)
    Next k
'
' Object Spreadsheet
'    Dim TS   As Spreadsheet
'    Set TS = ActiveSpreadsheet
'    TS.Cells(Itr+1,8) = Dis
'
' Continue estimation rules
    If (Dis > Eps*Ws And Itr < Nri) Then
      Ws = 0.0
      For k = 1 To Nc
        Wp(k) = We(k)
        Ws    = Ws+Wp(k)*Wp(k)
      Next k
      GoTo L1
    End If
'
  Ys(Mc) = Ysmo
  Rw(Mc) = We(Mc)
  Sg(Mc) = Sqrt(Vc/2.0)
'
End Sub
Function Weight(n,s,d) As Double
  Dim cf,sn As Double
  sn = n*s
  cf = 3.9301-33.9621*s+122.1792*s^2-221.3187*s^3+ _
       198.7453*s^4-70.3125*s^5
  Weight = sn/(cf*d+sn)
End Function
Sub Solver (Mc As Integer, Nc As Integer, _
            ByRef W() As Double, _
            ByRef X() As Double, ByRef Y() As Double, _
            Ysm As Double, ByRef R2() As Double)
'
  Dim k As Integer
  Dim Det, _
      Wx,Wy As Double
'
  Dim a(0 To 4) As Double
  Dim b(0 To 2) As Double
  Dim c(0 To 2) As Double
'
  a(0) = 0.0
  a(1) = 0.0
  a(2) = 0.0
  a(3) = 0.0
  a(4) = 0.0
  b(0) = 0.0
  b(1) = 0.0
  b(2) = 0.0
'
  For k = 1 To Nc
    Wx   = W(k)
    Wy   = Wx*Y(k)
    a(0) = a(0)+Wx
    b(0) = b(0)+Wy
'
    Wx   = Wx*X(k)
    Wy   = Wy*X(k)
    a(1) = a(1)+Wx
    b(1) = b(1)+Wy
'
    Wx   = Wx*X(k)
    Wy   = Wy*X(k)
    a(2) = a(2)+Wx
    b(2) = b(2)+Wy
'
    Wx   = Wx*X(k)
    a(3) = a(3)+Wx
'
    Wx   = Wx*X(k)
    a(4) = a(4)+Wx
  Next k
'
  Det  = a(0)*a(2)*a(4)+2.0*a(1)*a(2)*a(3)- _
         a(2)^3-a(1)*a(1)*a(4)-a(0)*a(3)*a(3)
  c(0) = b(0)*a(2)*a(4)+a(1)*b(2)*a(3)+b(1)*a(2)*a(3)- _
         a(2)*a(2)*b(2)-a(1)*b(1)*a(4)-b(0)*a(3)*a(3)
  c(1) = a(0)*b(1)*a(4)+b(0)*a(2)*a(3)+a(1)*a(2)*b(2)- _
         a(2)*a(2)*b(1)-a(1)*b(0)*a(4)-a(0)*b(2)*a(3)
  c(2) = a(0)*a(2)*b(2)+a(1)*a(2)*b(1)+b(0)*a(1)*a(3)- _
         a(2)*a(2)*b(0)-a(1)*a(1)*b(2)-a(0)*b(1)*a(3)
'
  For k = 1 To Nc
    Ysm   = Y(k)-(c(0)+X(k)*(c(1)+X(k)*c(2)))/Det
    R2(k) = Ysm*Ysm
  Next k
' 1 <= Mc <= Nc
  Ysm = (c(0)+X(Mc)*(c(1)+X(Mc)*c(2)))/Det
'
End Sub


'STATISTICA MACRO FILE VERSION 4
'BEGINPROPERTIES
'NAME=Trd_DWR
'DESCRIPTION=
'LANGUAGE=0
'ENDPROPERTIES
